/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package microprojet;

import static java.awt.Color.red;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author user
 */

public class interfacedeprojet extends javax.swing.JFrame {

    /**
     * Creates new form interfacedeprojet
     */
    public static String chemin ;
    public static BufferedReader reader;
    public FileReader in;
    public interfacedeprojet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 51));

        jLabel1.setText("Commende");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setText("Analyse Lexical");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setText("analyse syntexique");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 153));
        jButton3.setText("Analuse sementique");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 102, 153));
        jButton4.setText("charger un fichier");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Sortie");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 18, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        // TODO add your handling code here:
       
            String x = chemin; 
            x=x.replaceAll(","," , ").replaceAll("<"," < ").replaceAll(">"," > ");
            x=x.replaceAll("//[.].*", "//.").replaceAll("\n"," ").replaceAll("[ \t\t]+","");
          
            String[] A=x.split(" ");
              int i=0;
               jTextArea1.setText("");
           while(i<A.length){
                
          nbredeclone(i,A);
           //  jTextArea1.setText(jTextArea1.getText()+A[i]+"\n");
            
              i++;
            }
         
       
        
    }//GEN-LAST:event_jButton1ActionPerformed
    private int nbredeclone(int i,String A[]){
       // jTextArea1.setText(jTextArea1.getText()+A[i]+"\n");
        String x;
   
       if(A[i].equalsIgnoreCase("Start_Program")|| A[i].equalsIgnoreCase("Start") ) 
        { jTextArea1.setText(jTextArea1.getText()+A[i]+" : mot reaserver  \n");
            return 0;}
       
        if(A[i].equalsIgnoreCase("Int_Numeber"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : mot reaserver  \n");
             return 1;}
        
        if(A[i].equalsIgnoreCase(";;")||A[i].equalsIgnoreCase("Give"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : mot reaserver \n");
             return 2;}
        if(A[i].equalsIgnoreCase("if") || A[i].equalsIgnoreCase("--"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : mot reaserver pour condition\n");
             return 3;}
        if(A[i].equalsIgnoreCase("Real Number"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : mot reaserver declartion reel\n");
             return 4;}
        if(A[i].equalsIgnoreCase("<"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : Symbol infrieur \n");
             return 5;}
      
        if(A[i].equalsIgnoreCase(":") || A[i].equalsIgnoreCase(","))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : mot reaserver \n");
             return 6;}
        if(A[i].equalsIgnoreCase("//."))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : Symbolde comentaire \n");
             return 8;}
        if(A[i].equalsIgnoreCase("Affect"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : afictation \n");
        return 11;}
        if(A[i].equalsIgnoreCase("\""))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : geyemi  \n");
        return 11;}
        if(A[i].equalsIgnoreCase("ShowMes"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : affichege de msg\n");
             return 11;}
             if(A[i].equalsIgnoreCase("ShowVal"))
        {jTextArea1.setText(jTextArea1.getText()+A[i]+" : affichege de valeurs\n");
             return 12;}
       if(A[i].equalsIgnoreCase("End_Program")|| A[i].equalsIgnoreCase("Finich") ) 
        { jTextArea1.setText(jTextArea1.getText()+A[i]+" : mot reaserver  \n");
            return 10;}  
       if(A[i].charAt(0)>='0'&&A[i].charAt(0)<='9'){
            x=A[i];
            RnrL(x);
        return 9;
          }
           if(A[i].charAt(0)>='A'&&A[i].charAt(0)<='z'){
           x=A[i];
           RidentL(x);
         
     
        return 10;
          }
       
     
          
       
     
        
        return 7;
            
        
    } 
    //analyse le nbre reeele et entier
    public static void RnrL(String x){
                  int mot[][]={ {1,-1,-1},
                      {1,2,-1},
                      {2,-1,-1},
                
        };
          int i=0;
       // System.out.println(x);
 
         i=0;
        int ec=0;
        
        while(i<x.length() && mot[ec][nbreReeleL(x.charAt(i))]!=-1){
             ec=mot[ec][nbreReeleL(x.charAt(i))];
             i++;
            
        } 
         if(i==x.length() && ec == 2)
            jTextArea1.setText(jTextArea1.getText()+x+" : nbre reele\n ");
         else if(i==x.length() && ec == 1)
           jTextArea1.setText(jTextArea1.getText()+x+" : nbre entier \n");
             else jTextArea1.setText(jTextArea1.getText()+x+" : ereur de syntexe \n");;
    }
    public static int nbreReeleL(char tc){
       if(tc>='0'&&tc<='9')
             return 0;
 
        if(tc=='.')
             return 1;
        
         return 2;
        
    }
    //analyse une identificateur
    public static void RidentL(String x){
                         int mot[][]={ {1,-1,-1,-1},
                      {1,1,1,-1},};      
      
       int i=0;
       int ec=0;
     // jTextArea1.setText(jTextArea1.getText()+x+":ident\n");
        
        while(i<x.length() && mot[ec][identL(x.charAt(i))]!=-1){
             ec=mot[ec][identL(x.charAt(i))];
             i++;
         
        } 
      //  jTextArea1.setText(jTextArea1.getText()+i+":chaine corect");
        // jTextArea1.setText(jTextArea1.getText()+x.length()+":chaine corect");
       
        if(i==x.length() && ec == 1)
            jTextArea1.setText(jTextArea1.getText()+x+":identificateur\n");
         else jTextArea1.setText(jTextArea1.getText()+x+":ereur\n");
     
    }
    public static int identL(char tc){
        if(tc>='A'&&tc<='z')
             return 0;
        if(tc>='0'&&tc<='9')
             return 1;
 
        if(tc=='_')
             return 2;
        
     return 3;
        
    }
    
    
    
    //Analyse syntexique
    public static int Rnr(String x){
                  int mot[][]={ {1,-1,-1},
                      {1,2,-1},
                      {2,-1,-1},
                
        };
          int i=0;
       // System.out.println(x);
 
         i=0;
        int ec=0;
        
        while(i<x.length() && mot[ec][nbreReele(x.charAt(i))]!=-1){
             ec=mot[ec][nbreReele(x.charAt(i))];
             i++;
            
        } 
         if(i==x.length() && ec == 2){
             return 3;
         }
            
         else if(i==x.length() && ec == 1){
             return 3;
         }
                   
             else {
             return 5;
         }
    }
    public static int nbreReele(char tc){
       if(tc>='0'&&tc<='9')
             return 0;
 
        if(tc=='.')
             return 1;
        
         return 2;
        
    }
    public static int ident(char tc){
        if(tc>='A'&&tc<='z')
             return 0;
        if(tc>='0'&&tc<='9')
             return 1;
 
        if(tc=='_')
             return 2;
        
     return 3;
        
    }
    public static int Rident(String x){
                         int mot[][]={ {1,-1,-1,-1},
                      {1,1,1,-1},};      
      
       int i=0;
       int ec=0;
   
        
        while(i<x.length() && mot[ec][ident(x.charAt(i))]!=-1){
             ec=mot[ec][ident(x.charAt(i))];
             i++;
         
        } 
      
       
       if(i==x.length() && ec == 1){
            
            return 2;
            
        }
         else {
         return 5;
            }
     
    }
    //analyse syntexiaue se afectation de variable
    public static int  Affectvar(String tc){
           if(tc.equalsIgnoreCase("Affect")){
               return 0;
           }
           if(tc.equalsIgnoreCase("to")){
               return 1;
           }
           if(tc.charAt(0)>='A'&&tc.charAt(0)<='z'){
              return Rident(tc);
            }
          
           if(tc.equalsIgnoreCase(";;")){
               return 3;
           }
           return 4;
       }
    public static void Affectvariable(String z){
            int mot[][]={ {1,-1,-1,-1,-1},
                      {-1,-1,2,-1,-1},
                      {-1,3,-1,-1,-1},
                      {-1,-1,4,-1,-1},
                      {-1,-1,-1,5,-1},
                      {-1,-1,-1,-1,-1},
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][Affectvar(x)]!=-1){
             ec=mot[ec][Affectvar(x)];}
            
          else{
              j=tab.length;
              
          }
      }
                    if(j==tab.length&& ec == 5)
            jTextArea1.setText(jTextArea1.getText()+z+" : Affection de la valeur  d une variable a une autre variable\n");
       else  jTextArea1.setText(jTextArea1.getText()+z+"ereur de syntexe \n");
          
      }
    //analyse syntexique declaration dentier
    public static int entier(String tc){
           if(tc.equalsIgnoreCase("Int_Numeber")){
               return 0;
           }
           if(tc.charAt(0)==':'){
               return 1;
           }
           if(tc.charAt(0)>='A'&&tc.charAt(0)<='z'){
              
              return Rident(tc);
              
           }
           if(tc.equalsIgnoreCase(",")){
               return 3;
           }
           if(tc.equalsIgnoreCase(";;")){
               return 4;
           }
           return 5;
       }
    public static void IntNumber(String z){
   int mot[][]={ {1,-1,-1,-1,-1,-1},
                      {-1,2,-1,-1,-1,-1},
                      {-1,-1,3,-1,-1,-1},
                      {-1,-1,-1,2,4,-1},
                      {-1,-1,-1,-1,-1,-1},
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][entier(x)]!=-1){
             ec=mot[ec][entier(x)];}
            
          else{
              j=tab.length;
              
          }
        
      }

                         if(j==tab.length && ec == 4)
             jTextArea1.setText(jTextArea1.getText()+z+" : Declaration de entiers \n");
       else  jTextArea1.setText(jTextArea1.getText()+z+"ereur de syntexe \n");
          
          
      } 
      
    
    
            
      
          
      public static int nbif(String tc){
           if(tc.equalsIgnoreCase("if")){
               return 0;
           }
           if(tc.equalsIgnoreCase("--")){
               return 1;
           }
           if(tc.charAt(0)>='A'&&tc.charAt(0)<='z'){
              return Rident(tc);
            }
           if(tc.charAt(0)>='0'&&tc.charAt(0)<='9'){
               return Rnr(tc);
           }
           if(tc.equalsIgnoreCase("<") || tc.equalsIgnoreCase("<=") || tc.equalsIgnoreCase(">")  || tc.equalsIgnoreCase(">=")|| tc.equalsIgnoreCase("==")  || tc.equalsIgnoreCase("!=")){
               return 4;
           }
          
           return 5;
       } 
       public static void Condition(String z){
            int mot[][]={ {1,-1,-1,-1,-1,-1},
                      {-1,2,-1,-1,-1,-1},
                      {-1,-1,3,-1,-1,-1},
                      {-1,-1,-1,-1,4,-1},
                      {-1,-1,5,5,-1,-1},
                      {-1,6,-1,-1,-1,-1},
                      {-1,-1,-1,-1,-1,-1},
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][nbif(x)]!=-1){
             ec=mot[ec][nbif(x)];}
            
          else{
              j=tab.length;
              
          }
        
      }

                    if(j==tab.length&& ec == 6)
            jTextArea1.setText(jTextArea1.getText()+z+" : condition \n");
       else  jTextArea1.setText(jTextArea1.getText()+z+"ereur de syntexe \n");
          
      } 
      
      //analyse syntexiaue de aficher une valeur
     public static void Affichage(String z){
     int mot[][]={ {1,-1,-1,-1,-1},
                      {-1,2,-1,-1,-1},
                      {-1,-1,3,-1,-1},
                      {-1,-1,-1,4,-1},
                      {-1,-1,-1,-1,-1},
                      
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][ShowVal(x)]!=-1){
             ec=mot[ec][ShowVal(x)];}
            
          else{
              j=tab.length;
              
          }
        
      }

                    if(j==tab.length&& ec == 4)
            jTextArea1.setText(jTextArea1.getText()+z+" : Affichage de la valeur\n");
       else jTextArea1.setText(jTextArea1.getText()+z+"ereur\n");
          
      } 
     public static int ShowVal(String tc){
           if(tc.equalsIgnoreCase("ShowVal")){
               return 0;
           }
           if(tc.charAt(0)==':'){
               return 1;
           }
           if(tc.charAt(0)>='A'&&tc.charAt(0)<='z'){
              return Rident(tc);
            }
           if(tc.equalsIgnoreCase(";;")){
               return 3;
           }
           return 4;
       }
      //analyse syntexique de affiche dans l ecran
         public static int ShowMes(String tc){
           if(tc.equalsIgnoreCase("ShowMes")){
               return 0;
           }
           if(tc.charAt(0)==':'){
               return 1;
           }
            if(tc.charAt(0)=='"'){
               return 2;
           }
           
           if(tc.equalsIgnoreCase(";;")){
               return 3;
           }
           if(tc.charAt(0)!='ز'){
              return 4;
            }
           return 5;
       }
 public static void afficheecr(String z){
      int mot[][]={ {1,-1,-1,-1,-1,-1},
                      {-1,2,-1,-1,-1,-1},
                      {-1,-1,3,-1,-1,-1},
                      {-1,-1,4,-1,3,-1},
                      {-1,-1,-1,5,-1,-1},
                      {-1,-1,-1,-1,-1,-1},
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][ShowMes(x)]!=-1){
             ec=mot[ec][ShowMes(x)];}
            
          else{
              j=tab.length;
              
          }
        
      }
                  if(j==tab.length && ec == 5)
           jTextArea1.setText(jTextArea1.getText()+z+" : Affichages d une message de a lecran \n");
       else jTextArea1.setText(jTextArea1.getText()+z+"ereur de syntexe \n");
                } 
 // analyse syntexique de comentaire
     public static int com(String tc){
           if(tc.equalsIgnoreCase("//.")){
               return 0;
           }
           if(tc.charAt(0)!='ى'){
              return 1;
            }
           return 2;
       }
 public static void comentaire(String z){
      int mot[][]={ {1,-1,-1},
          {-1,1,-1},
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][com(x)]!=-1){
             ec=mot[ec][com(x)];}
            
          else{
              j=tab.length;
              
          }
        
      }

                 if(j==tab.length && ec == 1)
            jTextArea1.setText(jTextArea1.getText()+z+" : comentaire \n");
       else jTextArea1.setText(jTextArea1.getText()+z+"ereur de syntexe \n");
                 
          
          
      } 
       public static int give(String tc){
           if(tc.equalsIgnoreCase("Give")){
               return 0;
           }
           if(tc.charAt(0)==':'){
               return 1;
           }
           if(tc.charAt(0)>='A'&&tc.charAt(0)<='z'){
              return Rident(tc);
            }
           if(tc.charAt(0)>='0'&&tc.charAt(0)<='9'){
               return Rnr(tc);
           }
           if(tc.equalsIgnoreCase(";;")){
               return 4;
           }
           return 5;
       }
 public static void afectval(String z){
      int mot[][]={ {1,-1,-1,-1,-1,-1},
                      {-1,-1,2,-1,-1,-1},
                      {-1,3,-1,-1,-1,-1},
                      {-1,-1,-1,4,-1,-1},
                      {-1,-1,-1,-1,5,-1},
                      {-1,-1,-1,-1,-1,-1},
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][give(x)]!=-1){
             ec=mot[ec][give(x)];}
            
          else{
              j=tab.length;
              
          }
        
      }

                 if(j==tab.length && ec == 5)
            jTextArea1.setText(jTextArea1.getText()+z+" : Affection d un nombre enteier/reele a une variable \n");
       else jTextArea1.setText(jTextArea1.getText()+"ereur de syntexe\n");
                 
          
          
      } 
           public static int real(String tc){
           if(tc.equalsIgnoreCase("Real_Number")){
               return 0;
           }
           if(tc.charAt(0)==':'){
               return 1;
           }
           if(tc.charAt(0)>='A'&&tc.charAt(0)<='z'){
              
              return Rident(tc);
              
           }
           if(tc.equalsIgnoreCase(",")){
               return 3;
           }
           if(tc.equalsIgnoreCase(";;")){
               return 4;
           }
           return 5;
       }
        public static void RealNumber(String z){
   int mot[][]={ {1,-1,-1,-1,-1,-1},
                      {-1,2,-1,-1,-1,-1},
                      {-1,-1,3,-1,-1,-1},
                      {-1,-1,-1,2,4,-1},
                      {-1,-1,-1,-1,-1,-1},
                
        };
         int ec=0;
         
          
          
           int j;
          String[] tab=z.split(" ");
           String x=null;
      for(j=0;j<tab.length;j++){
           x=tab[j];
         
             
          if(mot[ec][real(x)]!=-1){
             ec=mot[ec][real(x)];}
            
          else{
              j=tab.length;
              
          }
        
      }

                         if(j==tab.length && ec == 4)
           jTextArea1.setText(jTextArea1.getText()+z+" : Declaration d un reele \n");
       else jTextArea1.setText(jTextArea1.getText()+z+"ereur\n");
          
          
      } 
     public static int AnalyseSyntexique(String ligne){
           String[] tab=ligne.split(" ");
           String x=tab[0];
           if(x.equalsIgnoreCase("Start_Program")){
               jTextArea1.setText(jTextArea1.getText()+ligne+" : debut de programme\n");
               return 0;
           }
           if(x.equalsIgnoreCase("Int_Numeber")){
              IntNumber(ligne);
               return 0;
           }
            if(x.equalsIgnoreCase("Give")){
              afectval(ligne);
               return 0;
           }
           if(x.equalsIgnoreCase("Real_Number")){
               RealNumber(ligne);
               return 0;
           }
           if(x.equalsIgnoreCase("if")){
               Condition(ligne);
               return 0;
           }
           if(x.equalsIgnoreCase("Affect")){
               Affectvariable(ligne);
               return 0;
           }
                   if(x.equalsIgnoreCase("ShowMes")){
             afficheecr(ligne);
               return 0;
           }
           if(x.equalsIgnoreCase("ShowVal")){
             Affichage(ligne);
               return 0;
           }
            if(x.equalsIgnoreCase("//.")){
              comentaire(ligne);
               return 0;
           }
           if(x.equalsIgnoreCase("End_Program")){
                jTextArea1.setText(jTextArea1.getText()+ligne+" : fin de programme \n");
               return 0;
           }
             if(x.equalsIgnoreCase("Else")){
                jTextArea1.setText(jTextArea1.getText()+ligne+" : sinon \n");
               return 0;
           }
               if(x.equalsIgnoreCase("Start")){
                jTextArea1.setText(jTextArea1.getText()+ligne+" : debut de bloc\n");
               return 0;
           }
                 if(x.equalsIgnoreCase("finish")){
                jTextArea1.setText(jTextArea1.getText()+ligne+" : fin de condition \n");
               return 0;
           }
           jTextArea1.setText(jTextArea1.getText()+ligne+" : errur syntexte \n");
           return 1;
           
           
           
     }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      String x=chemin;
      String ligne=null;
      x=x.replaceAll(","," , ").replaceAll("<"," < ").replaceAll(">"," > ").replaceAll("[\t]+"," ");
      String[] A=x.split("[\n]");
      jTextArea1.setText("");
      for(int i=0;i<A.length;i++){
          ligne=A[i];
          AnalyseSyntexique(ligne);
          
      }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
          jTextArea1.setText(chemin+"\n s");
    }//GEN-LAST:event_jButton3ActionPerformed
//button cherger une fichier
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser jc=new JFileChooser();
        //appelele;ethode readyFILe
        int var=jc.showOpenDialog(null);
        if (var==0){
            try {
             
                //utilisen le method readyFIle()pour appeler la fin de fichier
                readyFile(jc.getSelectedFile().getAbsolutePath());
            } catch (IOException ex) {
                Logger.getLogger(interfacedeprojet.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
    }//GEN-LAST:event_jButton4ActionPerformed
    private void readyText(String text){
       
       
          /*   text=text= jTextArea1.getText();
         jTextArea1.setText(jTextArea1.getText()+text+"\n");*/
       
        
    }
    private void readyFile(String filePath) throws IOException {
        //declaretion des variables
       
        
        String ligne;
        jTextArea1.setText("");
       
        try{
            in =new FileReader(new File(filePath));
            reader=new BufferedReader(in);
 
               do{
              ligne=reader.readLine();
           // String[] A=ligne.split(" ");
              int i=0;
              
           /* while(i<A.length){
                
         // nbredeclone(i,A);
           //  jTextArea1.setText(jTextArea1.getText()+A[i]+"\n");
            
              i++;
            }*/
          jTextArea1.setText(jTextArea1.getText()+ligne+"\n");
                }while(ligne!=null);
               chemin=jTextArea1.getText();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(interfacedeprojet.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfacedeprojet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfacedeprojet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfacedeprojet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfacedeprojet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfacedeprojet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private void readyFile() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


}
